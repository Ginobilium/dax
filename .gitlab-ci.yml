include:
  project: 'Duke-ARTIQ/ci-scripts'
  file: '/envs.yml'

stages:
  - test
  - deploy

.conda_env:
  image: ubuntu
  tags:
    - docker
  variables:
    CONDA_SCRIPT: "$HOME/miniconda.sh"
    CONDA_DIR: "$HOME/miniconda"
    CONDA_PACKAGES: "artiq numpy scipy pyvcd natsort pygit2 matplotlib python-graphviz h5py networkx"
  before_script:
    # Setup conda
    - apt-get -qq update; apt-get -qq -y install wget
    - wget -nv -O $CONDA_SCRIPT https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
    - bash $CONDA_SCRIPT -b -p $CONDA_DIR
    - source $CONDA_DIR/bin/activate
    - conda init
    - source ~/.bashrc
    # Install and activate environment
    - conda config --prepend channels https://conda.m-labs.hk/artiq
    - conda config --append channels conda-forge
    - conda config --prepend channels http://build-mblab.duckdns.org/conda
    - echo $CONDA_PACKAGES
    - conda create -y -n env $CONDA_PACKAGES
    - conda activate env

test_nix:
  extends: .nix_env
  stage: test
  coverage: '/^TOTAL.+?(\d+\.\d+\%)$/'
  variables:
    NIX_CMD: "nix-shell test/shell.nix --run"
  script:
    # Run test commands
    - $NIX_CMD "python3 --version"
    - $NIX_CMD "mypy --version; mypy"
    - $NIX_CMD "flake8 --version; flake8 --no-untyped-args --no-untyped-return"
    - $NIX_CMD "coverage --version; coverage run -m pytest -v -rs"
    - $NIX_CMD "coverage report"
    # Run build commands
    - nix build -f ./default.nix
    - nix-shell ./shell.nix --run "python -c 'import dax; print(dax.__version__)'"

test_conda:
  extends: .conda_env
  stage: test
  script:
    # Install packages required for testing
    - conda install -y pytest pycodestyle mypy flake8-artiq
    # Run test commands
    - python3 --version
    - mypy --version; mypy
    - flake8 --version; flake8
    - pytest -v -rs

pages:
  extends: .nix_env
  stage: test
  variables:
    NIX_CMD: "nix-shell doc/shell.nix --run"
  script:
    # Generate documentation
    - $NIX_CMD "cd doc; make html"
    - mv doc/build/html/ public/
  artifacts:
    paths:
      - public
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
